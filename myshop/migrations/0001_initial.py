# Generated by Django 3.2.9 on 2022-06-30 06:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_name', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CategoryHasBrand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_brand_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.brand')),
            ],
        ),
        migrations.CreateModel(
            name='CategoryMain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CategoryMid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(blank=True, max_length=50, null=True)),
                ('mainCategoryId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.categorymain')),
            ],
        ),
        migrations.CreateModel(
            name='CategorySub',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(blank=True, max_length=50, null=True)),
                ('midCategoryId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.categorymid')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('colorName', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('email', models.CharField(blank=True, max_length=25, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('city_city_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.city')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_address', models.CharField(blank=True, max_length=300, null=True)),
                ('customer_mobile_num', models.CharField(blank=True, max_length=15, null=True)),
                ('profile_image', models.ImageField(null=True, upload_to='profileimage')),
                ('firstvisit', models.IntegerField(default=0)),
                ('otp', models.IntegerField(blank=True, null=True)),
                ('city_city_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.city')),
                ('company_company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.company')),
                ('user_user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateField(blank=True, null=True)),
                ('delivery_address', models.CharField(blank=True, max_length=300, null=True)),
                ('schedule_order', models.DateTimeField(blank=True, null=True)),
                ('order_status', models.CharField(blank=True, max_length=10, null=True)),
                ('total_amount', models.FloatField(blank=True, null=True)),
                ('cancelled_order_date', models.DateField(blank=True, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('city_city_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.city')),
                ('customer_customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.customer')),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty_ordered', models.IntegerField(blank=True, null=True)),
                ('fixed_charge', models.FloatField(blank=True, null=True)),
                ('customer_delivery_area', models.CharField(blank=True, max_length=20, null=True)),
                ('delivery_charges', models.FloatField(blank=True, null=True)),
                ('product_price', models.FloatField(blank=True, null=True)),
                ('try_and_buy', models.IntegerField(blank=True, null=True)),
                ('orderdetails_order_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.order')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentIntention',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_intention_desc', models.CharField(blank=True, max_length=25, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method_name', models.CharField(blank=True, max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('product_short_description', models.CharField(blank=True, max_length=250, null=True)),
                ('product_specification', models.CharField(blank=True, max_length=1000, null=True)),
                ('product_mrp', models.IntegerField(blank=True, db_column='product_MRP', null=True)),
                ('qty_product', models.IntegerField(blank=True, null=True)),
                ('product_selling_price', models.IntegerField(blank=True, null=True)),
                ('product_add_date', models.DateField(blank=True, null=True)),
                ('try_and_buy', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(default=1)),
                ('categoryHasBrand_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.categoryhasbrand')),
            ],
        ),
        migrations.CreateModel(
            name='Salesperson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pan', models.CharField(blank=True, db_column='PAN', max_length=10, null=True)),
                ('salesperson_address', models.CharField(blank=True, max_length=300, null=True)),
                ('salesperson_mobile_num', models.CharField(blank=True, max_length=15, null=True)),
                ('security_amt_paid', models.IntegerField(blank=True, null=True)),
                ('account_number', models.CharField(blank=True, max_length=15, null=True)),
                ('account_name', models.CharField(blank=True, max_length=40, null=True)),
                ('account_ifsc_code', models.CharField(blank=True, db_column='account_IFSC_code', max_length=15, null=True)),
                ('cancelled_cheque_image', models.ImageField(null=True, upload_to='checkimage')),
                ('profile_image', models.ImageField(null=True, upload_to='profilepics')),
                ('salary', models.FloatField(blank=True, null=True)),
                ('is_verified', models.IntegerField(blank=True, null=True)),
                ('otp', models.IntegerField(blank=True, null=True)),
                ('city_city_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.city')),
                ('company_company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.company')),
                ('user_user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gstin', models.CharField(blank=True, db_column='GSTIN', max_length=15, null=True)),
                ('seller_address', models.CharField(blank=True, max_length=300, null=True)),
                ('seller_mobile_num', models.CharField(blank=True, max_length=15, null=True)),
                ('seller_subscription', models.IntegerField(blank=True, null=True)),
                ('account_number', models.CharField(blank=True, max_length=15, null=True)),
                ('account_name', models.CharField(blank=True, max_length=20, null=True)),
                ('store_name', models.CharField(blank=True, max_length=40, null=True)),
                ('store_address', models.CharField(blank=True, max_length=300, null=True)),
                ('gstin_certificate_image', models.ImageField(null=True, upload_to='gstin_image')),
                ('account_ifsc_code', models.CharField(blank=True, db_column='account_IFSC_code', max_length=20, null=True)),
                ('cancelled_cheque_image', models.ImageField(null=True, upload_to='checkimage')),
                ('profile_image', models.ImageField(null=True, upload_to='profilepics')),
                ('otp', models.IntegerField(blank=True, null=True)),
                ('is_verified', models.IntegerField(blank=True, null=True)),
                ('city_city_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.city')),
                ('company_company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.company')),
                ('user_user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(blank=True, max_length=30, null=True)),
                ('subscription_type', models.CharField(blank=True, max_length=50, null=True)),
                ('cost', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size_value', models.CharField(max_length=10)),
                ('categoryid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.categorysub')),
            ],
        ),
        migrations.CreateModel(
            name='ProductReturn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_return_date', models.DateField(blank=True, null=True)),
                ('purchase_amount', models.FloatField(blank=True, null=True)),
                ('reason_for_return', models.CharField(blank=True, max_length=50, null=True)),
                ('return_charges', models.FloatField(blank=True, null=True)),
                ('return_option', models.IntegerField(blank=True, null=True)),
                ('order_details_order_order_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.orderdetails')),
                ('order_details_product_product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductReplace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_replace_date', models.DateField(blank=True, null=True)),
                ('product_return_product_return_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.productreturn')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='productimage')),
                ('color', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.color')),
                ('product_product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='seller_seller_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.seller'),
        ),
        migrations.AddField(
            model_name='product',
            name='size',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.size'),
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateField(blank=True, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('credit_debit', models.IntegerField(blank=True, null=True)),
                ('payment_status', models.IntegerField(blank=True, null=True)),
                ('company_company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.company')),
                ('order_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.order')),
                ('payment_intention_payment_intention_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.paymentintention')),
                ('payment_method_payment_method_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.paymentmethod')),
                ('product_return_product_return_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.productreturn')),
                ('salesperson_salesperson_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.salesperson')),
                ('seller_seller_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.seller')),
            ],
        ),
        migrations.AddField(
            model_name='orderdetails',
            name='product_product_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.product'),
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer_name', models.CharField(blank=True, max_length=50, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('discount', models.FloatField(blank=True, null=True)),
                ('product_product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.product')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_date', models.DateField(blank=True, null=True)),
                ('feedback_description', models.CharField(blank=True, max_length=300, null=True)),
                ('delivery_delivery_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.delivery')),
            ],
        ),
        migrations.AddField(
            model_name='delivery',
            name='order_order_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.order'),
        ),
        migrations.AddField(
            model_name='delivery',
            name='product_replace_product_replace_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.productreplace'),
        ),
        migrations.AddField(
            model_name='delivery',
            name='salesperson_salesperson_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.salesperson'),
        ),
        migrations.AddField(
            model_name='city',
            name='state_state_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.state'),
        ),
        migrations.AddField(
            model_name='categoryhasbrand',
            name='category_category_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.categorymid'),
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('mobile_num', models.CharField(blank=True, max_length=15, null=True)),
                ('profile_image', models.ImageField(null=True, upload_to='profileimage')),
                ('otp', models.IntegerField(blank=True, null=True)),
                ('city_city_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.city')),
                ('company_company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.company')),
                ('user_user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='wishlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.customer')),
                ('product_product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.product')),
            ],
            options={
                'unique_together': {('product_product_id', 'customer_customer_id')},
            },
        ),
        migrations.CreateModel(
            name='sellersubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('seller_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.seller')),
                ('subscription_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.subscription')),
            ],
            options={
                'unique_together': {('seller_id', 'subscription_id')},
            },
        ),
        migrations.CreateModel(
            name='SalespersonAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_date', models.DateField()),
                ('salesperson_salesperson_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myshop.salesperson')),
            ],
            options={
                'unique_together': {('attendance_date', 'salesperson_salesperson_id')},
            },
        ),
        migrations.CreateModel(
            name='ProductReviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.CharField(blank=True, max_length=1000, null=True)),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('customer_customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.customer')),
                ('product_product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.product')),
            ],
            options={
                'unique_together': {('product_product_id', 'customer_customer_id')},
            },
        ),
        migrations.CreateModel(
            name='ProductHasFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_value', models.CharField(blank=True, max_length=45, null=True)),
                ('feature_feature_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.feature')),
                ('product_product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.product')),
            ],
            options={
                'unique_together': {('product_product_id', 'feature_feature_id')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='orderdetails',
            unique_together={('orderdetails_order_id', 'product_product_id')},
        ),
        migrations.AlterUniqueTogether(
            name='categoryhasbrand',
            unique_together={('category_category_id', 'brand_brand_id')},
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, default=1)),
                ('last_updated_date', models.DateTimeField(blank=True, null=True)),
                ('customer_customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.customer')),
                ('product_product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myshop.product')),
            ],
            options={
                'unique_together': {('product_product_id', 'customer_customer_id')},
            },
        ),
    ]
